// Generated by CoffeeScript 1.7.1
(function() {
  var Todo, TodoList, Util, debug, moment, util, _;

  util = require("util");

  moment = require("moment");

  _ = require("underscore");

  debug = require("debug")("Baseamp:TodoList");

  Todo = require("./Todo");

  Util = require("./Util");

  TodoList = (function() {
    function TodoList(input) {
      var todoList;
      if (input == null) {
        todoList = {};
      } else if (_.isString(input)) {
        todoList = this.fromMarkdown(input);
      } else {
        todoList = this.fromApi(input);
      }
      this.id = todoList.id;
      this.name = todoList.name;
      this.todos = todoList.todos;
    }

    TodoList.prototype.fromApi = function(input) {
      var apiTodo, apiTodos, category, todo, todoList, _i, _len, _ref;
      todoList = {
        id: input.id,
        name: input.name,
        todos: []
      };
      _ref = input.todos;
      for (category in _ref) {
        apiTodos = _ref[category];
        for (_i = 0, _len = apiTodos.length; _i < _len; _i++) {
          apiTodo = apiTodos[_i];
          todo = new Todo(apiTodo);
          if (todo != null) {
            todoList.todos.push(todo);
          }
        }
      }
      return todoList;
    };

    TodoList.prototype.fromMarkdown = function(str) {
      var id, line, lines, m, todo, todoList, _i, _len, _ref;
      todoList = {
        todos: []
      };
      str = ("" + str).replace("\r", "");
      lines = str.split("\n");
      for (_i = 0, _len = lines.length; _i < _len; _i++) {
        line = lines[_i];
        m = line.match(/^##\s+(.+)$/);
        if (m) {
          _ref = Util.extractId(m[1]), id = _ref.id, line = _ref.line;
          todoList.id = id;
          todoList.name = line;
          continue;
        }
        if (!line.trim()) {
          continue;
        }
        todo = new Todo(line);
        if (todo != null) {
          todoList.todos.push(todo);
        }
      }
      return todoList;
    };

    TodoList.prototype.toMarkdown = function() {
      var buf, todo, _i, _len, _ref;
      buf = "## " + this.name + " (#" + this.id + ")\n";
      buf += "\n";
      _ref = this.todos;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        todo = _ref[_i];
        buf += todo.toMarkdown();
      }
      buf += "\n";
      return buf;
    };

    return TodoList;

  })();

  module.exports = TodoList;

}).call(this);
