// Generated by CoffeeScript 1.7.1
(function() {
  var Todo, debug, moment, util, _;

  util = require("util");

  moment = require("moment");

  _ = require("underscore");

  debug = require("debug")("Baseamp:Todo");

  Todo = (function() {
    function Todo(todo) {
      var _ref;
      if (_.isString(todo)) {
        todo = this.fromMarkdown(todo);
      }
      this.due_at = this._formatDate(todo.due_at);
      this.assignee = this._formatName(((_ref = todo.assignee) != null ? _ref.name : void 0) || todo.assignee);
      this.id = todo.id;
      this.content = todo.content;
      this.category = todo.category;
    }

    Todo.prototype.fromMarkdown = function(str) {
      var id, m, pattern, todo;
      str = str.replace(/^[\s\-]+|[\s\-]+$/g, "");
      id = void 0;
      m = str.match(/\s+\(#(\d+)\)$/);
      if (m != null ? m[1] : void 0) {
        id = m[1];
        str = str.replace(m[0], "");
      }
      pattern = "^";
      pattern += "\\[(x| )\\]\\s+";
      pattern += "((\\d{4}-\\d{2}-\\d{2})\\s+)?";
      pattern += "(([A-Z]{3})\\s+)?";
      pattern += "(.+)";
      pattern += "$";
      m = str.match(new RegExp(pattern));
      if (!m) {
        throw new Error("Cannot match '" + str + "'");
      }
      todo = {
        due_at: m[3],
        assignee: m[5],
        category: m[1] === 'x' ? "completed" : "remaining",
        content: m[6],
        id: id
      };
      return todo;
    };

    Todo.prototype._formatDate = function(str) {
      if (str == null) {
        return "0000-00-00";
      }
      return moment(str).format("YYYY-MM-DD");
    };

    Todo.prototype._formatName = function(str) {
      var first, handle, howMany, i, part, parts, _i, _len;
      if (str == null) {
        return str;
      }
      str = "" + str;
      str = str.replace(/[^a-z\s]/i, "");
      handle = "";
      parts = str.split(/\s+/);
      first = 4 - parts.length;
      for (i = _i = 0, _len = parts.length; _i < _len; i = ++_i) {
        part = parts[i];
        howMany = 1;
        if (i === 0) {
          howMany = first;
        }
        handle += part.substr(0, howMany).toUpperCase();
      }
      return handle;
    };

    Todo.prototype.toMarkdown = function() {
      var buf;
      buf = " - ";
      if (this.category === "completed") {
        buf += "[x] ";
      } else if (this.category === "remaining") {
        buf += "[ ] ";
      } else if (this.category === "trashed") {
        return "";
      } else {
        throw new Error("Unknown category " + this.category);
      }
      if (this.due_at != null) {
        buf += "" + this.due_at + " ";
      } else {
        buf += "0000-00-00 ";
      }
      if (this.assignee != null) {
        buf += "" + this.assignee + " ";
      } else {
        buf += "    ";
      }
      buf += "" + this.content + " ";
      if (this.id != null) {
        buf += "(#" + this.id + ")";
      }
      buf += "\n";
      return buf;
    };

    return Todo;

  })();

  module.exports = Todo;

}).call(this);
